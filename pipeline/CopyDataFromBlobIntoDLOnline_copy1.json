{
	"name": "CopyDataFromBlobIntoDLOnline_copy1",
	"properties": {
		"activities": [
			{
				"name": "Copy_7o8",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "online//"
					},
					{
						"name": "Destination",
						"value": "raw/online/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"modifiedDatetimeStart": {
								"value": "@activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"metadata": [
								{
									"name": "LastModifiedDate",
									"value": "$$LASTMODIFIED"
								}
							]
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"skipErrorFile": {
						"fileMissing": true
					},
					"validateDataConsistency": false
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_7o8",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_7o8",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "IF EXISTS (SELECT 1 FROM watermarktable where TableName  =  'online_table') \nselect WatermarkValue from watermarktable where TableName  =  'online_table'\nELSE\nselect cast('1900-01-01' as datetime) AS WatermarkValue ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_moviesAzureSQLDB",
						"type": "DatasetReference",
						"parameters": {
							"tablename": "watermarktable",
							"schemaname": "dbo"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set New MaterMark Date",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy_7o8",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "LS_MoviesAzureSqlDB",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "IF NOT EXISTS (SELECT 1 FROM dbo.watermarktable WHERE TableName = 'online_table') \nINSERT INTO dbo.watermarktable VALUES ('online_table', '@{variables('LastLoadDate')}')\nELSE \nUPDATE dbo.watermarktable\nSET WatermarkValue = '@{variables('LastLoadDate')}'\nWHERE TableName = 'online_table'\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Get NewWaterMark",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SourceDataset_7o8",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get NewWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get NewWaterMark').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Metadata1",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "SourceDataset_7o8_copy1",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Get Metadata1').output.lastModified , activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue )",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "LastLoadDate",
											"value": {
												"value": "@activity('Get Metadata1').output.lastModified",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"LastLoadDate": {
				"type": "String",
				"defaultValue": "'1900-01-01'"
			},
			"MaxLoadDate": {
				"type": "String",
				"defaultValue": "'1900-01-01'"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-02-20T15:24:42Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}